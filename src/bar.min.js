/**
 *
 * bar.min.js
 * simple, elegant bar chart library
 * 04/11/2019 - version 1.0
 * <https://github.com/ryanzola/rz-charts-js>
 *
 * Copyright 2017 ryanzola <ryanzola@me.com>
 * Released under the MIT License
 * <https://github.com/ryanzola/rz-charts-js/blob/master/LICENSE.md>
 *
 */
class BarChart{constructor(a,b,c,d){this.id=a,this.width=b,this.height=c,this.data=d,this.axisRatio=10,this.verticalMargin=this.height*this.axisRatio/100,this.horizontalMargin=this.width*this.axisRatio/100,this.axisColor="#b1b1b1",this.axisWidth=.75,this.fontRatio=3,this.fontFamily="times",this.fontStyle="normal",this.fontWeight=300,this.fontColor="#666",this.verticalFontSize=this.height*this.fontRatio/100,this.horizontalFontSize=this.width*this.fontRatio/100,this.guidelineColor="#e5e5e5",this.guidelineWidth=.5,this.performOperations()}drawBars(){let a,b,c,d,e,f,g;for(let h=0;h<this.itemsNum;h++)a=this.createRandomColor(),b=`rgba(${a.r}, ${a.g}, ${a.b}, ${.3})`,c=`rgba(${a.r}, ${a.g}, ${a.b}, 1)`,this.context.beginPath(),d=this.horizontalMargin+h*this.horizontalLabelFrequency+this.horizontalLabelFrequency/this.axisRatio,e=this.height-this.verticalMargin,f=this.horizontalLabelFrequency-2*this.horizontalLabelFrequency/this.axisRatio,g=-1*this.verticalAxisWidth*this.values[h]/this.maxValue,this.context.fillStyle=b,this.context.strokeStyle=c,this.context.rect(d,e,f,g),this.context.stroke(),this.context.fill()}drawLine(a,b,c,d){this.context.beginPath(),this.context.moveTo(a,b),this.context.lineTo(c,d),this.context.stroke()}createRandomColor(){const a=getRandomInt(0,257),b=getRandomInt(0,257),c=getRandomInt(0,257);return{r:a,g:b,b:c}}performOperations(){this.createCanvas(),this.handleData(),this.prepareData(),this.drawChart()}createCanvas(){const a=document.createElement("canvas");a.id=this.id,a.width=this.width,a.height=this.height,document.getElementById(this.id).innerHTML="",document.getElementById(this.id).appendChild(a),this.canvas=a,this.context=a.getContext("2d")}handleData(){this.labels=[],this.values=[],this.data.forEach(a=>{this.labels.push(a.label),this.values.push(a.value)})}prepareData(){this.itemsNum=this.data.length,this.maxValue=Math.max.apply(null,this.values),this.minValue=Math.min.apply(null,this.values),this.verticalAxisWidth=this.height-2*this.verticalMargin,this.horizontalAxisWidth=this.width-2*this.horizontalMargin,this.verticalUpperBound=10*Math.ceil(this.maxValue/10),this.verticalLabelFrequency=this.verticalUpperBound/this.itemsNum,this.horizontalLabelFrequency=this.horizontalAxisWidth/this.itemsNum}drawChart(){this.drawVerticalAxis(),this.drawVerticalLabels(),this.drawVerticalGuidelines(),this.drawHorizontalAxis(),this.drawHorizontalLabels(),this.drawHorizontalGuidelines(),this.drawBars()}drawVerticalAxis(){this.context.strokeStyle=this.axisColor,this.context.lineWidth=this.axisWidth,this.drawLine(this.horizontalMargin,this.verticalMargin,this.horizontalMargin,this.height-this.verticalMargin)}drawVerticalLabels(){let a,b,c;this.labelFont=`${this.fontStyle} ${this.fontWeight} ${this.verticalFontSize}px ${this.fontFamily}`,this.context.font=this.labelFont,this.context.textAlign="right",this.context.fillStyle=this.fontColor;const d=this.verticalAxisWidth/this.verticalUpperBound*this.verticalLabelFrequency;for(let e=0;e<=this.itemsNum;e++)a=this.verticalUpperBound-e*this.verticalLabelFrequency,b=this.horizontalMargin-this.horizontalMargin/this.axisRatio,c=this.verticalMargin+e*d,this.context.fillText(a,b,c)}drawVerticalGuidelines(){let a,b,c,d;this.context.strokeStyle=this.guidelineColor,this.context.lineWidth=this.guidelineWidth;for(let e=0;e<=this.itemsNum;e++)a=this.horizontalMargin+e*this.horizontalLabelFrequency,b=this.height-this.verticalMargin,c=this.horizontalMargin+e*this.horizontalLabelFrequency,d=this.verticalMargin,this.drawLine(a,b,c,d)}drawHorizontalAxis(){this.context.strokeStyle=this.axisColor,this.context.lineWidth=this.axisWidth,this.drawLine(this.horizontalMargin,this.height-this.verticalMargin,this.width-this.horizontalMargin,this.height-this.verticalMargin)}drawHorizontalLabels(){let a,b;this.labelFont=`${this.fontStyle} ${this.fontWeight} ${this.verticalFontSize}px ${this.fontFamily}`,this.context.font=this.labelFont,this.context.textAlign="center",this.context.textBaseline="top",this.context.fillStyle=this.fontColor;for(let c=0;c<this.itemsNum;c++)a=this.horizontalMargin+c*this.horizontalLabelFrequency+this.horizontalLabelFrequency/2,b=this.height-this.verticalMargin+this.verticalMargin/this.axisRatio,this.context.fillText(this.labels[c],a,b)}drawHorizontalGuidelines(){let a,b,c,d;this.context.strokeStyle=this.guidelineColor,this.context.lineWidth=this.guidelineWidth;const e=this.verticalAxisWidth/this.verticalUpperBound*this.verticalLabelFrequency;for(let f=0;f<=this.itemsNum;f++)a=this.horizontalMargin,b=this.verticalMargin+f*e,c=this.horizontalMargin+this.horizontalAxisWidth,d=this.verticalMargin+f*e,this.drawLine(a,b,c,d)}}